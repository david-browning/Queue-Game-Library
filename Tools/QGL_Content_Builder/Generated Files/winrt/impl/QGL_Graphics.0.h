// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180821.2

#pragma once

WINRT_EXPORT namespace winrt::QGL_Graphics {

struct IQGL_GraphicsRT;
struct QGL_GraphicsRT;

}

namespace winrt::impl {

template <> struct category<QGL_Graphics::IQGL_GraphicsRT>{ using type = interface_category; };
template <> struct category<QGL_Graphics::QGL_GraphicsRT>{ using type = class_category; };
template <> struct name<QGL_Graphics::IQGL_GraphicsRT>{ static constexpr auto & value{ L"QGL_Graphics.IQGL_GraphicsRT" }; };
template <> struct name<QGL_Graphics::QGL_GraphicsRT>{ static constexpr auto & value{ L"QGL_Graphics.QGL_GraphicsRT" }; };
template <> struct guid_storage<QGL_Graphics::IQGL_GraphicsRT>{ static constexpr guid value{ 0xB8DCBA76,0xF89C,0x562A,{ 0xBA,0x5D,0x6D,0xD7,0x78,0x36,0x68,0xCD } }; };
template <> struct default_interface<QGL_Graphics::QGL_GraphicsRT>{ using type = QGL_Graphics::IQGL_GraphicsRT; };

template <> struct abi<QGL_Graphics::IQGL_GraphicsRT>{ struct type : IInspectable
{
};};

template <typename D>
struct consume_QGL_Graphics_IQGL_GraphicsRT
{
};
template <> struct consume<QGL_Graphics::IQGL_GraphicsRT> { template <typename D> using type = consume_QGL_Graphics_IQGL_GraphicsRT<D>; };

}
