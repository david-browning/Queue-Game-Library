// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180821.2

#pragma once

WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Interop {

struct TypeName;

}

WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Markup {

struct IXamlType;
struct XmlnsDefinition;

}

WINRT_EXPORT namespace winrt::Windows::UI::Xaml::Markup {

struct IXamlMetadataProvider;

}

WINRT_EXPORT namespace winrt::QGL_Content_Builder {

struct IMainPage;
struct MainPage;
struct XamlMetaDataProvider;

}

namespace winrt::impl {

template <> struct category<QGL_Content_Builder::IMainPage>{ using type = interface_category; };
template <> struct category<QGL_Content_Builder::MainPage>{ using type = class_category; };
template <> struct category<QGL_Content_Builder::XamlMetaDataProvider>{ using type = class_category; };
template <> struct name<QGL_Content_Builder::IMainPage>{ static constexpr auto & value{ L"QGL_Content_Builder.IMainPage" }; };
template <> struct name<QGL_Content_Builder::MainPage>{ static constexpr auto & value{ L"QGL_Content_Builder.MainPage" }; };
template <> struct name<QGL_Content_Builder::XamlMetaDataProvider>{ static constexpr auto & value{ L"QGL_Content_Builder.XamlMetaDataProvider" }; };
template <> struct guid_storage<QGL_Content_Builder::IMainPage>{ static constexpr guid value{ 0xAA0FB824,0x4EF9,0x5606,{ 0xA7,0xD1,0xB0,0x04,0x41,0x5D,0xAF,0x75 } }; };
template <> struct default_interface<QGL_Content_Builder::MainPage>{ using type = QGL_Content_Builder::IMainPage; };
template <> struct default_interface<QGL_Content_Builder::XamlMetaDataProvider>{ using type = Windows::UI::Xaml::Markup::IXamlMetadataProvider; };

template <> struct abi<QGL_Content_Builder::IMainPage>{ struct type : IInspectable
{
    virtual int32_t WINRT_CALL get_MyProperty(int32_t* value) noexcept = 0;
    virtual int32_t WINRT_CALL put_MyProperty(int32_t value) noexcept = 0;
};};

template <typename D>
struct consume_QGL_Content_Builder_IMainPage
{
    int32_t MyProperty() const;
    void MyProperty(int32_t value) const;
};
template <> struct consume<QGL_Content_Builder::IMainPage> { template <typename D> using type = consume_QGL_Content_Builder_IMainPage<D>; };

}
