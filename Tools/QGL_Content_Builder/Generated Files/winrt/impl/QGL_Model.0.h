// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180821.2

#pragma once

WINRT_EXPORT namespace winrt::QGL_Model {

struct IQGL_ModelRT;
struct QGL_ModelRT;

}

namespace winrt::impl {

template <> struct category<QGL_Model::IQGL_ModelRT>{ using type = interface_category; };
template <> struct category<QGL_Model::QGL_ModelRT>{ using type = class_category; };
template <> struct name<QGL_Model::IQGL_ModelRT>{ static constexpr auto & value{ L"QGL_Model.IQGL_ModelRT" }; };
template <> struct name<QGL_Model::QGL_ModelRT>{ static constexpr auto & value{ L"QGL_Model.QGL_ModelRT" }; };
template <> struct guid_storage<QGL_Model::IQGL_ModelRT>{ static constexpr guid value{ 0x118FA141,0xEC1D,0x5026,{ 0xA2,0x2C,0x4C,0x5C,0x02,0x71,0xC2,0x35 } }; };
template <> struct default_interface<QGL_Model::QGL_ModelRT>{ using type = QGL_Model::IQGL_ModelRT; };

template <> struct abi<QGL_Model::IQGL_ModelRT>{ struct type : IInspectable
{
};};

template <typename D>
struct consume_QGL_Model_IQGL_ModelRT
{
};
template <> struct consume<QGL_Model::IQGL_ModelRT> { template <typename D> using type = consume_QGL_Model_IQGL_ModelRT<D>; };

}
