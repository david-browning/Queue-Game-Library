<Page
    x:Class="QGL_Content_Builder.Pages.EditorPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:QGL_Content_Builder.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:projection="using:QGL_Projection"
    mc:Ignorable="d"
    Loaded="Page_Loaded"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
   <Page.Transitions>
      <TransitionCollection>
         <NavigationThemeTransition/>
      </TransitionCollection>
   </Page.Transitions>
   <Page.Resources>
      <DataTemplate x:DataType="projection:CompilerVersion"
                    x:Key="CompilerVersionViewTemplate">
         <TextBlock Text="{x:Bind ValueName, Mode=OneWay}"/>
      </DataTemplate>

      <DataTemplate x:DataType="projection:ResourceType"
                    x:Key="ResourceTypeViewTemplate">
         <TextBlock Text="{x:Bind ValueName, Mode=OneWay}"/>
      </DataTemplate>

      <DataTemplate x:DataType="projection:ContentLoader"
                    x:Key="ContentLoaderViewTemplate">
         <Grid>
            <Grid.ColumnDefinitions>
               <ColumnDefinition/>
               <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{x:Bind ValueName, Mode=OneWay}" Grid.Column="0"/>
            <TextBlock TextAlignment="Right" Text="{x:Bind Value, Mode=OneWay}" Grid.Column="1"/>
         </Grid>
      </DataTemplate>
   </Page.Resources>
   <Grid>
      <VisualStateManager.VisualStateGroups>
         <VisualStateGroup>
            <VisualState x:Name="m_narrowWindowState">
               <VisualState.StateTriggers>
                  <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}"/>
               </VisualState.StateTriggers>
               <VisualState.Setters>
                  <Setter Target="m_masterPane.Margin" Value="0,36,0,0"/>
                  <Setter Target="m_detailPane.Margin" Value="12,36,12,0"/>
               </VisualState.Setters>
            </VisualState>
            <VisualState x:Name="m_defaultWindowState">
               <VisualState.StateTriggers>
                  <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}"/>
               </VisualState.StateTriggers>
               <VisualState.Setters>
                  <Setter Target="m_masterPane.Margin" Value="0,36,0,0"/>
                  <Setter Target="m_detailPane.Margin" Value="24,36,24,0"/>
               </VisualState.Setters>
            </VisualState>
         </VisualStateGroup>
      </VisualStateManager.VisualStateGroups>

      <SplitView IsPaneOpen="True"
                  DisplayMode="Inline"
                  PaneBackground="{ThemeResource SystemControlBackgroundChromeMediumLowBrush}">
         <SplitView.Pane>
            <Grid x:Name="m_masterPane">
               <Grid.RowDefinitions>
                  <RowDefinition Height="auto"/>
                  <RowDefinition/>
               </Grid.RowDefinitions>
               <Grid Grid.Row="0">
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition/>
                     <ColumnDefinition Width="auto"/>
                  </Grid.ColumnDefinitions>
                  <ProgressRing IsActive="{x:Bind ViewModel.IsProjectSaving, Mode=OneWay}"
                                HorizontalAlignment="Right"/>
                  <CommandBar Grid.Column="1" Background="Transparent"
                              DefaultLabelPosition="Right">
                     <AppBarButton Icon="Save"
                                   IsEnabled="{x:Bind ViewModel.IsProjectSaving, Mode=OneWay,
                                               Converter={StaticResource InverseBooleanConverter}}"
                                   Click="OnSaveProjectButtonClicked"/>
                  </CommandBar>
               </Grid>
               <Pivot Grid.Row="1">
                  <Pivot.Items>
                     <PivotItem Header="Header">
                        <StackPanel>
                           <ComboBox Header="Compiler" HorizontalAlignment="Stretch"
                                     Margin="{StaticResource ControlPadding}"
                                     ItemsSource="{x:Bind projection:CompilerVersion.CompilerVersions, Mode=OneWay}"
                                     SelectedItem="{x:Bind ViewModel.Project.ContentInfo.CompilerVersion, Mode=TwoWay}"
                                     ItemTemplate="{StaticResource CompilerVersionViewTemplate}"/>
                           <ComboBox Header="Resource Type" HorizontalAlignment="Stretch"
                                     x:Name="m_resourceTypeComboBox"
                                     Margin="{StaticResource ControlPadding}"
                                     ItemsSource="{x:Bind ViewModel.AvailableExtensions.ResourceTypes, Mode=OneWay}"
                                     SelectedItem="{x:Bind ViewModel.Project.ContentInfo.ResourceType, Mode=TwoWay}"
                                     ItemTemplate="{StaticResource ResourceTypeViewTemplate}"
                                     SelectionChanged="ResourceTypeBoxSelectionChanged"/>
                           <ComboBox Header="Content Loader" HorizontalAlignment="Stretch"
                                     Margin="{StaticResource ControlPadding}"
                                     ItemsSource="{x:Bind ViewModel.Project.ContentInfo.ResourceType.Loaders, Mode=OneWay}"
                                     SelectedItem="{x:Bind ViewModel.Project.ContentInfo.ContentLoader, Mode=TwoWay}"
                                     ItemTemplate="{StaticResource ContentLoaderViewTemplate}"/>
                           <TextBox Header="Name" HorizontalAlignment="Stretch"
                                    Margin="{StaticResource ControlPadding}"
                                    Text="{x:Bind ViewModel.Project.ContentInfo.ContentName, Mode=TwoWay}"/>
                           <ToggleSwitch Header="Visible" HorizontalAlignment="Stretch"
                                         Margin="{StaticResource ControlPadding}"
                                         IsOn="{x:Bind ViewModel.Project.ContentInfo.ContentVisible, Mode=TwoWay}"/>
                           <ToggleSwitch Header="Obey Physics" HorizontalAlignment="Stretch"
                                         Margin="{StaticResource ControlPadding}"
                                         IsOn="{x:Bind ViewModel.Project.ContentInfo.ContentObeyPhysics, Mode=TwoWay}"/>
                        </StackPanel>
                     </PivotItem>
                     <PivotItem Header="Dictionary">
                        <Grid>
                           <Grid.RowDefinitions>
                              <RowDefinition Height="auto"/>
                              <RowDefinition/>
                           </Grid.RowDefinitions>
                           <CommandBar Grid.Row="0" DefaultLabelPosition="Collapsed"
                                       Background="Transparent" Margin="0,4,0,0">
                              <AppBarButton Label="New" Icon="Add" 
                                            Visibility="{x:Bind ViewModel.IsDictionarySelectionMode, Mode=OneWay, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                            Click="OnAddDictionaryEntryButtonClicked"
                                            Transitions="{StaticResource RepositionTransition}"/>
                              <AppBarButton Label="Delete" Icon="Delete"
                                            Visibility="{x:Bind ViewModel.IsDictionarySelectionMode, Mode=OneWay}"
                                            Click="OnDeleteMultipleEntriesButtonClick"
                                            Transitions="{StaticResource RepositionTransition}"/>
                              <AppBarToggleButton Label="Select" Icon="Bullets" 
                                                  IsChecked="{x:Bind ViewModel.IsDictionarySelectionMode,Mode=TwoWay}"/>
                           </CommandBar>
                           <ListView Grid.Row="1" x:Name="m_dictionaryEntryListView"
                                     SelectedItem="{x:Bind ViewModel.SelectedProjectEntry, Mode=TwoWay}"
                                     ItemsSource="{x:Bind ViewModel.Project.ObservableEntries, Mode=OneWay}">
                              <ListView.ItemContainerTransitions>
                                 <TransitionCollection>
                                    <AddDeleteThemeTransition/>
                                 </TransitionCollection>
                              </ListView.ItemContainerTransitions>
                              <ListView.ItemTemplate>
                                 <DataTemplate x:DataType="projection:ContentProjectEntry">
                                    <Grid Margin="0,4,0,4">
                                       <Grid.ColumnDefinitions>
                                          <ColumnDefinition Width="auto"/>
                                          <ColumnDefinition/>
                                       </Grid.ColumnDefinitions>
                                       <Grid Grid.Column="1">
                                          <Grid.RowDefinitions>
                                             <RowDefinition/>
                                             <RowDefinition/>
                                          </Grid.RowDefinitions>
                                          <TextBlock Grid.Row="0" 
                                                  Style="{ThemeResource TextBlockListTitleStyle}"
                                                  Text="{x:Bind ContentInfo.ContentName, Mode=OneWay}"/>
                                          <TextBlock Grid.Row="1"
                                                  Style="{ThemeResource TextBlockListSubtitleStyle}"
                                                  Text="{x:Bind ContentInfo.ResourceType.ValueName, Mode=OneWay}"/>
                                       </Grid>
                                    </Grid>
                                 </DataTemplate>
                              </ListView.ItemTemplate>
                           </ListView>
                        </Grid>
                     </PivotItem>
                  </Pivot.Items>
               </Pivot>
            </Grid>
         </SplitView.Pane>
         <SplitView.Content>
            <Grid x:Name="m_detailPane" x:Load="{x:Bind ViewModel.IsEntrySelected, Mode=OneWay}"
                  Margin="24,36,24,0" ChildrenTransitions="{StaticResource ReorderTransition}">
               <Grid.RowDefinitions>
                  <RowDefinition Height="auto"/>
                  <RowDefinition/>
               </Grid.RowDefinitions>
               <StackPanel Visibility="{x:Bind ViewModel.IsEntrySelected, Mode=OneWay}"
                           Margin="0,0,0,12">
                  <CommandBar Background="Transparent" DefaultLabelPosition="Right">
                     <AppBarButton Label="Save" Icon="Save"
                                   Click="OnSaveDictionaryEntryButtonClick"/>
                     <AppBarButton Label="Delete" Icon="Delete">
                        <AppBarButton.Flyout>
                           <Flyout x:Name="m_deleteEntryConfirmFlyout">
                              <StackPanel>
                                 <TextBlock Margin="0,0,0,12"
                                            Text="The entry will be removed but the files will still exist."/>
                                 <Button Content="Remove this entry"
                                         Click="OnDeleteDictionaryEntryButtonClick"/>
                              </StackPanel>
                           </Flyout>
                        </AppBarButton.Flyout>
                     </AppBarButton>
                  </CommandBar>
                  <VariableSizedWrapGrid Orientation="Horizontal"
                                         ItemWidth="180"
                                         ChildrenTransitions="{StaticResource ReorderTransition}">
                     <VariableSizedWrapGrid.Resources>
                        <x:Double x:Key="EntryInfoGridMinWidth">
                           160
                        </x:Double>
                     </VariableSizedWrapGrid.Resources>
                     <ComboBox Header="Resource Type"
                               MinWidth="{StaticResource EntryInfoGridMinWidth}"
                               Margin="{StaticResource ControlPadding}"
                               ItemsSource="{x:Bind ViewModel.AvailableExtensions.ResourceTypes,Mode=OneWay}"
                               SelectedItem="{x:Bind ViewModel.SelectedProjectEntry.ContentInfo.ResourceType, Mode=TwoWay}"
                               ItemTemplate="{StaticResource ResourceTypeViewTemplate}"
                               SelectionChanged="DictionaryResourcetypeBoxSelectionChanged"/>
                     <ComboBox Header="Loader"
                               MinWidth="{StaticResource EntryInfoGridMinWidth}"
                               Margin="{StaticResource ControlPadding}"
                               SelectedItem="{x:Bind ViewModel.SelectedProjectEntry.ContentInfo.ContentLoader, Mode=TwoWay}"
                               ItemsSource="{x:Bind ViewModel.SelectedProjectEntry.ContentInfo.ResourceType.Loaders, Mode=OneWay}"
                               ItemTemplate="{StaticResource ContentLoaderViewTemplate}"/>
                     <TextBox Header="Name"
                              MinWidth="{StaticResource EntryInfoGridMinWidth}"
                              Margin="{StaticResource ControlPadding}"
                              Text="{x:Bind ViewModel.SelectedProjectEntry.ContentInfo.ContentName, Mode=TwoWay}"/>
                     <ToggleSwitch Header="Visible"
                                   MinWidth="{StaticResource EntryInfoGridMinWidth}"
                                   Margin="{StaticResource ControlPadding}"
                                   IsOn="{x:Bind ViewModel.SelectedProjectEntry.ContentInfo.ContentVisible, Mode=TwoWay}"/>
                     <ToggleSwitch Header="Obey Physics"
                                   MinWidth="{StaticResource EntryInfoGridMinWidth}"
                                   Margin="{StaticResource ControlPadding}"
                                   IsOn="{x:Bind ViewModel.SelectedProjectEntry.ContentInfo.ContentObeyPhysics, Mode=TwoWay}"/>
                  </VariableSizedWrapGrid>
                  <Grid Margin="0,12,0,12">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="auto"/>
                     </Grid.ColumnDefinitions>
                     <TextBlock VerticalAlignment="Center" Style="{ThemeResource BaseTextBlockStyle}"
                                Text="{x:Bind ViewModel.SelectedProjectEntry.FilePath, Mode=OneWay}"/>
                     <CommandBar Grid.Column="1" Background="Transparent"
                                 DefaultLabelPosition="Right">
                        <AppBarButton Label="Browse" Icon="OpenFile"
                                      Click="OnBrowseDictionaryEntryFileButtonClick"/>
                        <AppBarButton Label="New" Icon="NewFolder"
                                      Click="OnNewDictionaryEntryFileButtonClick"/>
                     </CommandBar>
                  </Grid>
               </StackPanel>
               <Frame x:Name="m_contentPresenter" Grid.Row="1" 
                      Content="{x:Bind ViewModel.AvailableExtensions.GetExtension(ViewModel.SelectedProjectEntry.ContentInfo), Mode=OneWay}"/>
            </Grid>
         </SplitView.Content>
      </SplitView>
   </Grid>
</Page>
