// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180821.2

#pragma once

WINRT_EXPORT namespace winrt::QGL_Content {

struct IQGL_ContentRT;
struct QGL_ContentRT;

}

namespace winrt::impl {

template <> struct category<QGL_Content::IQGL_ContentRT>{ using type = interface_category; };
template <> struct category<QGL_Content::QGL_ContentRT>{ using type = class_category; };
template <> struct name<QGL_Content::IQGL_ContentRT>{ static constexpr auto & value{ L"QGL_Content.IQGL_ContentRT" }; };
template <> struct name<QGL_Content::QGL_ContentRT>{ static constexpr auto & value{ L"QGL_Content.QGL_ContentRT" }; };
template <> struct guid_storage<QGL_Content::IQGL_ContentRT>{ static constexpr guid value{ 0x463076F8,0xA883,0x5772,{ 0x91,0x47,0x30,0x6B,0xBB,0x4D,0xCF,0x7D } }; };
template <> struct default_interface<QGL_Content::QGL_ContentRT>{ using type = QGL_Content::IQGL_ContentRT; };

template <> struct abi<QGL_Content::IQGL_ContentRT>{ struct type : IInspectable
{
};};

template <typename D>
struct consume_QGL_Content_IQGL_ContentRT
{
};
template <> struct consume<QGL_Content::IQGL_ContentRT> { template <typename D> using type = consume_QGL_Content_IQGL_ContentRT<D>; };

}
